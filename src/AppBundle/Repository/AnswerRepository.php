<?php

namespace AppBundle\Repository;

use AppBundle\Entity\Answer;
use Doctrine\Common\Collections\ArrayCollection;

/**
 * AnswerRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class AnswerRepository extends \Doctrine\ORM\EntityRepository
{
    public function getAllChecked($answers)
    {
        return $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.id IN (:ids)')
            ->setParameter('ids', $answers)
            ->distinct(true)
            ->getQuery()
            ->getResult();
    }

    public function getCorrectAnswers($qId)
    {
        return $this->createQueryBuilder('a')
            ->select('a.id')
            ->where('a.question = :qId')
            ->andWhere('a.correct = 1')
            ->setParameter('qId', $qId)
            ->getQuery()
            ->getResult();
    }

    /**
     * @param int $questionId
     * @param ArrayCollection $answers
     */
    public function removeAnswers($questionId, $answers)
    {
        $oldAnswers = $this->createQueryBuilder('a')
            ->select('a')
            ->where('a.question = :question')
            ->setParameter('question', $questionId)
            ->getQuery()
            ->getResult();

        /** @var Answer $answer */
        foreach ($answers as $answer) {
            /**
             * @var Answer $oldAnswer */
            foreach ($oldAnswers as $key => $oldAnswer) {
                if ($answer->getId() == $oldAnswer->getId()) {
                    unset($oldAnswers[$key]);
                }
            }
        }
        /** @var Answer $answer */
        foreach ($oldAnswers as $answer) {
            $this->_em->remove($answer);
        }
        $this->_em->flush();
    }
}
